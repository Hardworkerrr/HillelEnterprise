import groovy.sql.Sql

import java.sql.Connection
import java.sql.Driver
import java.sql.DriverManager
import java.sql.PreparedStatement

plugins {
    id 'groovy'
    id 'java'
}

apply plugin: 'java'

group = 'com.hillel.javaee'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation gradleApi()
    implementation 'org.apache.groovy:groovy:4.0.14'
    implementation 'mysql:mysql-connector-java:8.0.33'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

}

test {
    useJUnitPlatform()
}


tasks.register("MoveFiles", Copy).configure {
    from 'src/main/resources'
    into 'target'
}

tasks.register('customJar', Jar) {
    manifest {
        attributes 'Main-Class': 'com.baeldung.fatjar.Application'
    }
    archiveBaseName = 'projectJar'
    archiveAppendix = 'version'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    destinationDirectory = layout.getProjectDirectory().dir('target')
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

tasks.register('DatabaseTable') {
    DriverManager.registerDriver(Sql.classLoader.loadClass('com.mysql.cj.jdbc.Driver')
            .getDeclaredConstructor().newInstance() as Driver)
    Connection connection = DriverManager.getConnection(project.properties.get('databaseURL').toString(),
            project.properties.get('username').toString(),
            project.properties.get('password').toString())
    PreparedStatement preparedStatement = connection.prepareStatement('CREATE TABLE Persons (PersonID int,LastName varchar(255),FirstName varchar(255),Address varchar(255),City varchar(255))')
    preparedStatement.executeUpdate()
    preparedStatement.close()
    connection.close()
}